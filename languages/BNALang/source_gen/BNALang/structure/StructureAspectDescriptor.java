package BNALang.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAsset = createDescriptorForAsset();
  /*package*/ final ConceptDescriptor myConceptParticipant = createDescriptorForParticipant();
  /*package*/ final ConceptDescriptor myConceptSmartContract = createDescriptorForSmartContract();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAsset, myConceptParticipant, myConceptSmartContract);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Asset:
        return myConceptAsset;
      case LanguageConceptSwitch.Participant:
        return myConceptParticipant;
      case LanguageConceptSwitch.SmartContract:
        return myConceptSmartContract;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAsset() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BNALang", "Asset", 0x2eaecd5c01894365L, 0x9c9c356775610810L, 0x1b6b6f384f83992cL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:da556fcd-83c8-41d5-9fb7-1cc44bb39ea9(BNALang.structure)/1975795149174970668");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParticipant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BNALang", "Participant", 0x2eaecd5c01894365L, 0x9c9c356775610810L, 0x1b6b6f384f839ba1L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:da556fcd-83c8-41d5-9fb7-1cc44bb39ea9(BNALang.structure)/1975795149174971297");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSmartContract() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BNALang", "SmartContract", 0x2eaecd5c01894365L, 0x9c9c356775610810L, 0x1b6b6f384f8394f6L);
    b.class_(false, false, true);
    b.origin("r:da556fcd-83c8-41d5-9fb7-1cc44bb39ea9(BNALang.structure)/1975795149174969590");
    b.version(2);
    b.aggregate("assets", 0x1b6b6f384f83992fL).target(0x2eaecd5c01894365L, 0x9c9c356775610810L, 0x1b6b6f384f83992cL).optional(true).ordered(true).multiple(true).origin("1975795149174970671").done();
    b.aggregate("participants", 0x1b6b6f384f839ba4L).target(0x2eaecd5c01894365L, 0x9c9c356775610810L, 0x1b6b6f384f839ba1L).optional(true).ordered(true).multiple(true).origin("1975795149174971300").done();
    return b.create();
  }
}
